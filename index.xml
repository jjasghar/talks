<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Talks</title><link>https://speaking.moficodes.dev/</link><description>Recent content in Home on Talks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 Mar 2021 13:03:46 -0400</lastBuildDate><atom:link href="https://speaking.moficodes.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://speaking.moficodes.dev/about/</link><pubDate>Thu, 25 Mar 2021 13:15:27 -0400</pubDate><guid>https://speaking.moficodes.dev/about/</guid><description>Mofizur Rahman (@moficodes) is a Developer Advocate at IBM. His area of interests include container orchestration and micro services. His favorite programming language these days is Go. He also tinkers with Node, Python and Java. He is also learning and teaching in the Go, Kubernetes, Docker and Microservice community. He is a strong believer of the power of open source and importance of giving back to the community. He is a self proclaimed sticker collecting addict and has collected several box full of stickers with no signs of stopping.</description></item><item><title>Managing Kubernetes with Istio</title><link>https://speaking.moficodes.dev/talks/managing_k8s_with_istio/</link><pubDate>Mon, 25 Mar 2019 12:21:28 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/managing_k8s_with_istio/</guid><description>Pitch As monolithic apps are decomposed into microservices, developers have to worry about the challenges in distributed systems like service discovery, load balancing, monitoring, dynamic routing and perhaps most important of all, compliance and security. Istio was created to handle these features.
Description Developers are moving away from large monolithic apps in favor of small, focused microservices that speed up implementation and improve resiliency. Microservices and containers changed application design and deployment patterns, but along with them brought challenges like service discovery, routing, failure handling, security and visibility to microservices.</description></item></channel></rss>